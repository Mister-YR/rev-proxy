# /etc/nginx/conf.d/example.pp.ua.conf
server {
    if ($host = example.pp.ua) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        listen [::]:80;
        server_name example.pp.ua;

    # Redirect http to https
        return 301 https://$server_name$request_uri;


}

# HTTPS
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name example.pp.ua;
  server_tokens off;

  # logging
  access_log /var/log/nginx/example.pp.ua.access.log;
  error_log /var/log/example.pp.ua.error.log;

 #  ssl on;

    ssl_certificate /etc/letsencrypt/live/example.pp.ua/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/example.pp.ua/privkey.pem; # managed by Certbot

  ssl_session_timeout 1d;
  ssl_session_cache shared:MozSSL:10m;
  ssl_session_tickets off;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;
  ssl_stapling on;
  ssl_stapling_verify on;

# Proxy pass related
  location / {
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# include ip-white list from /etc/nginx/acess-list/...
#    include /etc/nginx/access-list/ip-white-list-example.pp.ua;
#    deny all;
    # Where to pass
    proxy_pass http://192.168.0.3/;
    # httpV1.1 to Websocket
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # Websocket closing prevention
    proxy_read_timeout 36000;

    # More info for proxied server about client
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    }

}
